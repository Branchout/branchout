#!/bin/bash

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout: a tool for managing multi-repo projects
    
    status: show the list of known projects and their current state
    "
  exit 1
}

function branchoutDirectory() {
  BRANCHOUT_DIRECTORY="${PWD}"
  while test ! -f "${BRANCHOUT_DIRECTORY}/Branchoutfile"; do
    BRANCHOUT_DIRECTORY=$(dirname "${BRANCHOUT_DIRECTORY}")
    test "${BRANCHOUT_DIRECTORY}" = '/' && usage "Branchoutfile configuration not found in parent hierarchy, run branchout init" 
  done
  export BRANCHOUT_DIRECTORY
}

function loadBranchout() {
  branchoutDirectory
  
  # shellcheck source=examples/Branchoutfile
  source "${BRANCHOUT_DIRECTORY}/Branchoutfile"
  
  test -z "${BRANCHOUT_NAME}" && usage "Branchout name not defined in Branchoutfile, run branchout init"
  export BRANCHOUT_HOME="${HOME}/branchout/${BRANCHOUT_NAME}"

  test -z "${BRANCHOUT_GIT_BASEURL}" && usage "Git base url is not defined in Branchoutfile, run branchout init"
  export BRANCHOUT_GIT_BASEURL
  export BRANCHOUT_PREFIX
  
  test ! -d "${BRANCHOUT_HOME}" && usage "Branchout home '${BRANCHOUT_HOME}' does not exist, run branchout init"
  test -f "${BRANCHOUT_DIRECTORY}/Branchoutprojects" || usage "Branchoutprojects file missing, try branchout add [repository]"
}

function branchoutProjects() {
  cat "${BRANCHOUT_DIRECTORY}/Branchoutprojects"
}


function branchoutProjectStatus() {
  if test -d "$1"; then
    echo "$1 master"
  else
    echo "$1 Not cloned"
  fi
}


function main() {
  test $# -gt 0 || usage
  loadBranchout
  branchoutModule="${1}"
  shift
  exec branchout-"${branchoutModule}" "${@}"
}

main "${@}"
