#!/bin/bash

set -e

function branchout_status() {
  test -s "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}" || usage "No projects to show, try branchout add <project-name>"
  exec "${BRANCHOUT_PATH}/branchout-project" list "${1}" | xargs -P"${BRANCHOUT_THREADS-10}" -I{} "${BRANCHOUT_PATH}/branchout-project" status {}
}

function branchout_pull() {
  "${BRANCHOUT_PATH}/branchout-group" list "${1}" | xargs -P"${BRANCHOUT_THREADS-10}" -I{} "${BRANCHOUT_PATH}/branchout-group" pull {}
  exec "${BRANCHOUT_PATH}/branchout-project" list "${1}" | xargs -P"${BRANCHOUT_THREADS-10}" -I{} "${BRANCHOUT_PATH}/branchout-project" pull {}
}

function branchout_add() {
  sort "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}" <(echo "$1") | uniq > "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}.tmp"
  mv "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}.tmp" "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}"
  exec "${BRANCHOUT_PATH}/branchout" status "$("${BRANCHOUT_PATH}/branchout-group" derive "$1")"
}

function branchout_clone() {
  sort "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}" <(echo "$1") | uniq > "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}.tmp"
  mv "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}.tmp" "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}"
  exec "${BRANCHOUT_PATH}/branchout" pull "$1"
}

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout: a tool for managing multi-repo projects
    
    status: show the list of known projects and their current state
    
    pull: pull all the projects and display their status
    
    add: add a project to the list
    
    init: Intialise the current git repository as a branchout root project
    
    project: see branchout project help
    
    group: see branchout group help

    "
  exit 1
}

function main() {
  test $# -gt 0 || usage
  
  BRANCHOUT_PATH="$(dirname "$0")"
  
  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  
  case "${1}" in
    help)
      usage
      ;;
    init)
      shift
      exec "${BRANCHOUT_PATH}/branchout-init" "${@}"
      ;;
    version)
      branchout_version
      ;;
    *)
       # shellcheck source=branchout-environment
      . "${BRANCHOUT_PATH}/branchout-environment"
      branchoutModule="${1}"
      shift
      if declare -f -F branchout_"${branchoutModule}" >/dev/null; then
         eval branchout_"${branchoutModule}" "${@}"
        
      elif test -x "${BRANCHOUT_PATH}/branchout-${branchoutModule}"; then
        exec "${BRANCHOUT_PATH}/branchout-${branchoutModule}" "${@}"
        
      else
        eval branchout_pull "${branchoutModule}" "${@}"

      fi
      ;;
  esac

}

main "${@}"
