#!/bin/bash

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout: a tool for managing multi-repo projects
    
    status: show the list of known projects and their current state
    "
  exit 1
}

function branchoutDirectory() {
  BRANCHOUT_DIRECTORY="${PWD}"
  while test ! -f "${BRANCHOUT_DIRECTORY}/Branchoutfile"; do
    BRANCHOUT_DIRECTORY=$(dirname "${BRANCHOUT_DIRECTORY}")
    test "${BRANCHOUT_DIRECTORY}" = '/' && echo ".branchout configuration not found in parent hierarchy, run branchout init" && exit 1
  done
  export BRANCHOUT_DIRECTORY
}

function loadBranchout() {
  branchoutDirectory
  
#   grep -q -v -e "^BRANCHOUT_NAME=\".*\"" "${BRANCHOUT_DIRECTORY}/.branchout" && usage "Branchout name not defined in .branchout, run branchout init"
  
  # shellcheck source=examples/Branchoutfile
  source "${BRANCHOUT_DIRECTORY}/Branchoutfile"
  
  test -z "${BRANCHOUT_NAME}" && usage "Branchout name not defined in .branchout, run branchout init"
  BRANCHOUT_HOME="${HOME}/branchout/${BRANCHOUT_NAME}"
  test -d "${BRANCHOUT_HOME}" || usage "Branchout home '${BRANCHOUT_HOME}' does not exist, run branchout init"
}

function branchoutStatus() {
  loadBranchout  
}


case "$1" in
  status)
    branchoutStatus
    ;;
  *)
    usage
    ;;
esac
