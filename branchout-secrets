#!/bin/bash

set -e

setupEd25519() {
  ensureConfigValue "Your email address" "EMAIL"
  echo "Generate key for ${BRANCHOUT_CONFIG_EMAIL}"
  gpg2 "${KUBESEC_DEBUG}" --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --quick-gen-key "${BRANCHOUT_CONFIG_EMAIL}" ed25519
}

setupRsa4096() {
  ensureConfigValue "Your email address" "EMAIL"
  echo "Generate key for ${BRANCHOUT_CONFIG_EMAIL}"
  gpg2 "${KUBESEC_DEBUG}" --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --quick-gen-key "${BRANCHOUT_CONFIG_EMAIL}" rsa4096
}

secretsShow() {
  gpg2 "${KUBESEC_DEBUG}" --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --list-keys
}

secretsEdit() {
    echo "Not implemented" && exit 127
  kubesec edit --keyring ~/branchout/wexinc-ifcs/keys.gpg "$1"
}

secretsCreate() {
  ensureConfigValue "Setup gpg key" "GPG_KEY"
  test -f "src/main/secrets/$1.yaml" && usage "Secret $1 already exists"
  mkdir -p src/main/secrets/
  kubesec create "${KUBESEC_DEBUG} ${KUBESEC_SETTINGS}" --key "pgp:${BRANCHOUT_CONFIG_GPG_KEY}" --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" "${1}" > "src/main/secrets/$1.yaml"
}

usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout secrets: a tool for managing kubebernetes secrets

   branchout secrets settings|edit|create|show [<target>][--debug]

   settings - set up your local environment
   edit <target> - edit a secret file
   create <target> - create a secret file
   show <target> - show the contents of a secret file
"
  exit 127
}

main() {
  test $# -gt 0 || usage
  if [[ "${*}" =~ "--trace" ]]; then
    set -x
  fi
  if [[ "${*}" =~ "--debug" ]]; then
    KUBESEC_DEBUG="--debug"
  fi
  if [[ "${*}" =~ "--for-testing" ]]; then
    KUBESEC_SETTINGS="--batch --pinentry=loopback --passphrase ''"
  fi

  BRANCHOUT_PATH="$(dirname "$0")"

  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  # shellcheck source=branchout-environment
  . "${BRANCHOUT_PATH}/branchout-environment"

  case "$1" in
    edit)
      secretsEdit "$2"
      ;;
    show)
      secretsShow
      ;;
    setup)
      setupEd25519
      ;;
    create)
      secretsCreate "$2"
      ;;
    *)
      usage
  esac
}

main "${@}"
