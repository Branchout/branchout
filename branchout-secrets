#!/bin/bash

KUBESEC="/home/michael/src/go/src/github.com/shyiko/kubesec/kubesec"

set -e

setupEd25519() {
  ensureConfigValue "your email address" "EMAIL"
  echo "Generating key for ${BRANCHOUT_CONFIG_EMAIL}"
  # shellcheck disable=SC2086
  gpg2 ${GNUPG_SETTINGS} --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --quick-gen-key "${BRANCHOUT_CONFIG_EMAIL}" ed25519
}

setupRsa4096() {
  ensureConfigValue "your email address" "EMAIL"
  # shellcheck disable=SC2086
  gpg2 ${GNUPG_SETTINGS} --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --list-keys "${BRANCHOUT_CONFIG_EMAIL}" 2>/dev/null 1>/dev/null && usage-settings "Key already exists for ${BRANCHOUT_CONFIG_EMAIL}"
  echo "Generating key for ${BRANCHOUT_CONFIG_EMAIL}"
  # shellcheck disable=SC2086
  gpg2 ${GNUPG_SETTINGS} --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --quick-gen-key "${BRANCHOUT_CONFIG_EMAIL}" rsa4096
}

secretsShow() {
  ensureConfigValue "your email address" "EMAIL"
  # shellcheck disable=SC2086
  gpg2 ${GNUPG_SETTINGS} --no-default-keyring --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" --list-keys "${BRANCHOUT_CONFIG_EMAIL}"
}

secretsEdit() {
  echo "Not implemented" && exit 127
  ${KUBESEC} edit --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" "$1"
}

secretsCreate() {
  ensureConfigValue "Setup gpg key" "GPG_KEY"
  test -f "src/main/secrets/$1.yaml" && usage-settings "Secret ${1} already exists"
  test -f "target/resources/kubernetes/${1}.template" || usage-settings "Secret template not found for $1"
  mkdir -p "src/main/secrets/$(dirname "$1")"
  # shellcheck disable=SC2086
  if ${KUBESEC} ${KUBESEC_SETTINGS} encrypt ${KUBESEC_DEBUG} --key "pgp:${BRANCHOUT_CONFIG_GPG_KEY}" --keyring "${BRANCHOUT_HOME}/.gnupg/${BRANCHOUT_CONFIG_GPG_KEYRING}" "target/resources/kubernetes/${1}.template" --output "src/main/secrets/${1}.yaml"; then
    secretStatus "${1}" "BO_THEME_OK" "ok"
  else
    secretStatus "${1}" "BO_THEME_ERROR" "failed"
  fi
  
}

secretStatus() {
  echo -e "${BO_THEME_RESET}${1%/*} ${1##*/}\033[70D\033[70C${!2}${3}${BO_THEME_RESET}"
}

secretsStatus() {
  test -d target/resources/kubernetes || usage-settings "You need to build to get the templates"
  find target/resources/kubernetes -name 'secret*.template' | sort | sed -e 's,target/resources/kubernetes/\(.*\)/\(.*\).template,\1/\2,' | while read -r each; do
    test ! -f "src/main/secrets/${each}.yaml" && secretStatus "${each}" "BO_THEME_HIGHLIGHT" "missing"
  done
  find src/main/secrets -name 'secret*.yaml' | sort | sed -e 's,src/main/secrets/\(.*\)/\(.*\).yaml,\1/\2,' | while read -r each; do
    if test ! -f "target/resources/kubernetes/${each}.template"; then
      secretStatus "${each}" "BO_THEME_WARNING" "no-template"
    else
      if diff -u <(yq read "target/resources/kubernetes/${each}.template" data | sort | cut -d: -f1) <(yq read "src/main/secrets/${each}.yaml" data | sort | cut -d: -f1) >/dev/null; then
        secretStatus "${each}" "BO_THEME_OK" "ok"
      else
        secretStatus "${each}" "BO_THEME_ERROR" "mismatch"
      fi
    fi
  done
}

usage-settings() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout secrets: a tool for managing kubebernetes secrets

  branchout secrets settings|edit|create|show [<target>][--debug]

  settings - set up your local environment
  edit <target> - edit a secret file
  create <target> - create a secret file
  show <target> - show the contents of a secret file
  setup - setup an rsa 4096 key
  setupEd25519 - setup an ed25519 key
  "
  exit 127
}

main() {
  test $# -gt 0 || usage-settings
  GNUPG_SETTINGS="-q"
  POSITIONAL=()
  for i in "$@"; do
    case $i in
      --passphrase=*)
        PASSPHRASE="${i#*=}"
        GNUPG_SETTINGS="--batch --pinentry=loopback --passphrase '${PASSPHRASE}' ${GNUPG_SETTINGS}"
        KUBESEC_SETTINGS="--passphrase=${PASSPHRASE}"
        shift # past argument=value
      ;;
      --trace)
        set -x
        shift
      ;;
      --debug)
        GNUPG_SETTINGS=""
        shift
      ;;
      *)
        POSITIONAL+=("$1") # save it in an array for later
        shift # past argument
        # unknown option
      ;;
    esac
  done
  
  set -- "${POSITIONAL[@]}"
  
  BRANCHOUT_PATH="$(dirname "$0")"
  
  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  # shellcheck source=branchout-environment
  . "${BRANCHOUT_PATH}/branchout-environment"
  
  case "$1" in
    edit)
      secretsEdit "$2"
    ;;
    show)
      secretsShow
    ;;
    setup)
      setupRsa4096
    ;;
    setupEd25519)
      setupEd25519
    ;;
    create)
      secretsCreate "$2"
    ;;
    status)
      secretsStatus
    ;;
    *)
      usage-settings
  esac
}

main "${@}"
