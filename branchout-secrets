#!/bin/bash

set -e

secretsGenerate() {

   # echo "
   #  %echo Generate ${BRANCHOUT_DIRECTORY}/key
   #  Key-Type: DSA
   #  Key-Length: 2048
   #  Subkey-Type: ELG-E
   #  Subkey-Length: 1024
   #  Name-Real: Joe Tester
   #  Name-Comment: with stupid passphrase
   #  Name-Email: joe@foo.bar
   #  Expire-Date: 0
   #  Passphrase: abc
   #  # Do a commit here, so that we can later print "done" :-)
   #  %commit
   #  %echo done
   #  " | gpg2 --no-default-keyring --keyring ~/branchout/wexinc-ifcs/keys.gpg --generate-key --batch
  echo "Not implemented" && exit 127
}

secretsShow() {
  # gpg2 --list-keys --no-default-keyring --keyring ~/branchout/wexinc-ifcs/keys.gpg --debug --key "pgp:E830818F8C5C965F8663A90524201B48AE8BE623" -i
  echo "Not implemented" && exit 127
}

secretsEdit() {
    echo "Not implemented" && exit 127
  kubesec edit --keyring ~/branchout/wexinc-ifcs/keys.gpg "$1"
}

usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout secrets: a tool for managing kubebernetes secrets

   settings - set up your local environment
   edit <target> - edit a secret file
   create <target> - create a secret file
   show <target> - show the contents of a secret file
"
  exit 127
}

main() {
  test $# -gt 0 || usage

  BRANCHOUT_PATH="$(dirname "$0")"

  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  # shellcheck source=branchout-environment
  . "${BRANCHOUT_PATH}/branchout-environment"

  case "$1" in
    edit)
      secretsEdit "$2"
      ;;
    show)
      secretsShow
      ;;
    settings)
      secretsGenerate
      ;;
    *)
      usage
  esac
}

main "${@}"
