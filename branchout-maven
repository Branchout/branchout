#!/bin/bash

set -x


PROJECT_DIRECTORY=`pwd`
while test ! -f ${PROJECT_DIRECTORY}/Branchoutfile; do
  PROJECT_DIRECTORY=`dirname ${PROJECT_DIRECTORY}`
  test "${PROJECT_DIRECTORY}" = '/' && bail "Branchoutfile not found in parent directories"
done

source ${PROJECT_DIRECTORY}/Branchoutfile

test -n "${BRANCHOUT_NAME}" || BRANCHOUT_NAME="${FORCE_NAME}"
export BRANCHOUT_HOME=~/branchout/${BRANCHOUT_NAME}

test -f ${BRANCHOUT_HOME}/maven/settings.xml || exit 127

MAVEN_SETTINGS=${BRANCHOUT_HOME}/maven

MAVEN_OPTS="-s $MAVEN_SETTINGS/settings.xml $MAVEN_OPTS"

echo "Branchout $BRANCHOUT_HOME with $(java -version 2>&1 | head -n 1) as  $GIT_AUTHOR_EMAIL"

test -f reactor.xml && MAVEN_OPTS="-f reactor.xml $MAVEN_OPTS"

exec mvn $MAVEN_OPTS $*

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout-maven reactor|init|<goal>
  
  init
      
      Setup branchout for maven
  
  reactor [<group>]
  
      Create the
  
  list [prefix]
  
      List all the projects with the given prefix
  
  "
  
  exit 1
}

function main() {
  test $# -gt 0 || usage
  
  BRANCHOUT_PATH="$(dirname "$0")"
  
  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  # shellcheck source=branchout-environment
  . "${BRANCHOUT_PATH}/branchout-environment"

        
  case "${1}" in
    list)
      if test "${2}" = "--grouped"; then
        projectListWithGroups
      else
        projectList "${2}"
      fi
      ;;
    status)
      test -n "${2}" || usage "Must provide project"
      projectStatus "${2}"
      ;;
    pull)
      test -n "${2}" || usage "Must provide project"
      projectPull "${2}"
      ;;
    *)
      usage
  esac
}

main "${@}"
