#!/bin/bash

declare -A mavenAliases=(
  ['cv']='clean verify'
  ['cvi']='-Pwebapp-interactive clean verify'
  ['vi']='-Pwebapp-interactive verify'
  ['hth']='-f head-to-head.xml clean verify'
  ['hthi']='-f head-to-head.xml -Pwebapp-interactive clean verify'

  # Release commands
  ['tag']='-B validate release:prepare'
  ['up']='release:perform'

  # Project information commands
  ['dep']='dependency:resolve'
  ['src']='dependency:sources'
  ['tree']='dependency:tree'
  ['pom']='help:effective-pom'
  ['set']='help:effective-settings'

  # Project definition update commands
  ['par']='versions:update-parent'
  ['plu']='versions:display-plugin-updates'
  ['update']='bounds:update'
  ['upgrade']='bounds:upgrade'
)

function runMaven() {
  commands=("${@}")
  for each in ${!commands[*]}; do
    if test -n "${mavenAliases[${commands[$each]}]}"; then
      commands[$each]="${mavenAliases[${commands[$each]}]}"
    fi
  done

  test -f reactor.xml && exec mvn -f reactor.xml -s "${BRANCHOUT_HOME}/maven/settings.xml" "${commands[*]}"
  exec mvn -s "${BRANCHOUT_HOME}/maven/settings.xml" "${commands[*]}"
}

function readValue() {
  printf "Please provide %s:", "${1}"
  read -r VALUE
  test -z "${VALUE}" && usage "You must supply $1"
  export "${2}=${VALUE}"
}

function mavenSettings() {
  if test -z "${BRANCHOUT_MAVEN_REPOSITORY}"; then
    readValue "your maven repository" "BRANCHOUT_MAVEN_REPOSITORY"
    branchout set "BRANCHOUT_MAVEN_REPOSITORY" "${BRANCHOUT_MAVEN_REPOSITORY}"
  fi
  if test -z "${BRANCHOUT_DOCKER_REGISTRY}"; then
    readValue "your docker registry" "BRANCHOUT_DOCKER_REGISTRY"
    branchout set "BRANCHOUT_DOCKER_REGISTRY" "${BRANCHOUT_DOCKER_REGISTRY}"
  fi
  readValue "your artifact repository username" "REPOSITORY_USER"
  readValue "your artifact repository secret" "REPOSITORY_API_KEY"
  
  mkdir -p "${BRANCHOUT_HOME}/maven/"
  echo "writing ${BRANCHOUT_HOME}/maven/settings.xml"
  if test -f "${BRANCHOUT_DIRECTORY}/branchout-templates/maven-settings.xml"; then
    echo <(cat "${BRANCHOUT_DIRECTORY}/branchout-templates/maven-settings.xml") > "${BRANCHOUT_HOME}/maven/settings.xml"
  else
    echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<settings xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\" xmlns=\"http://maven.apache.org/SETTINGS/1.1.0\"
    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">

  <localRepository>${BRANCHOUT_NAME}/maven/repository</localRepository>

  <servers>
    <server>
      <username>${REPOSITORY_USER}</username>
      <password>${REPOSITORY_API_KEY}</password>
      <id>branchout-maven</id>
    </server>   
    <server>
      <username>${REPOSITORY_USER}</username>
      <password>${REPOSITORY_API_KEY}</password>
      <id>${BRANCHOUT_DOCKER_REGISTRY}</id>
    </server>   
  </servers>

  <mirrors>
    <mirror>
      <mirrorOf>*</mirrorOf>
      <url>${BRANCHOUT_MAVEN_REPOSITORY}</url>
      <id>branchout-maven</id>
    </mirror>
  </mirrors>

  <pluginGroups>
    <pluginGroup>net.stickycode.plugins</pluginGroup>
  </pluginGroups>

</settings>
" > "${BRANCHOUT_HOME}/maven/settings.xml"
  fi
}

function mavenReactor() {
  echo "Maven reactor not implemented"
}

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout-maven settings|reactor|<alias>|<maven command>
  
  settings
      
      Generate the maven settings file
  
  reactor
  
      Generate the reactor.xml for the current directory
  
  alias
  
      cv     clean verify
      cvi    clean verify -Pwebapp-interactive
  
  maven command
      
      clean
      generate-resources
      process-resouces
      compile
      process-classes
      test
      prepare-package
      package
      integration-test
      verify
  
  "
  
  exit 1
}

function main() {
  test $# -gt 0 || usage
  
  BRANCHOUT_PATH="$(dirname "$0")"
  
  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"
  # shellcheck source=branchout-environment
  . "${BRANCHOUT_PATH}/branchout-environment"

        
  case "${1}" in
    version)
      echo "Branchout $BRANCHOUT_HOME with $(java -version 2>&1 | head -n 1) as $GIT_AUTHOR_EMAIL"
      runMaven --version
      ;;
    reactor)
      mavenReactor "${*}"
      ;;
    settings)
      mavenSettings "${*}"
      ;;
    show)
      sed -e 's,<password>.*</password>,<password>XXXXX</password>,g' "${BRANCHOUT_HOME}/maven/settings.xml"
      ;;
    *)
      test -f "${BRANCHOUT_HOME}/maven/settings.xml" || mavenSettings
      runMaven "${@}"
  esac
}

main "${@}"
