#!/bin/bash
function usage() {
  echo "branchout-group derive [project]
  
  status 
      
      Return the status of the given group, Not cloned, branch, rebasing
  
  pull group
  
      Attempt to pull the group, show the branch or error
  
  list
  
      List all the groups
      
  STDIN
  
      Derive the group for all the projects piped in
  
  "
  
  exit 1
}

function projectClone() {
  test -d "${1}"|| mkdir "${1}"
}

function projectGroups() {
  branchout-project list | branchout-group | sort | uniq
}

function branchoutGroupDerive() {
  if test -z "${BRANCHOUT_PREFIX}"; then
    echo "${1%%-*}"
  else
    noPrefix="${1#${BRANCHOUT_PREFIX}-}"
    echo "${noPrefix%%-*}"
  fi

}

function branchoutProjectDerive() {
  if test -z "${BRANCHOUT_PREFIX}"; then
    echo "${1}"
  else
    echo "${1#*-}"
  fi

}

function main() {
  case $1 in
    derive) 
      branchoutGroupDerive "${2}"
      ;;
    deriveProject) 
      branchoutProjectDerive "${2}"
      ;;
    pull)
      projectClone "${2}"
      ;;
    list)
      projectGroups
      ;;

    *)
      usage
      ;;
  esac
}

if test $# -gt 0; then
  main "${@}"
else
  # STDIN is always derived
  while read -r each; do
    branchoutGroupDerive "${each}"
  done
fi
