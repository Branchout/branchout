#!/bin/bash

test -n "${DEBUG}" && set -x
set -e

function readValue() {
  printf "Please provide %s: " "${1}"
  read -r VALUE
  test -z "${VALUE}" && usage "You must supply $1"
  export "${2}=${VALUE}"
}

function readSecret() {
  printf "Please provide %s: " "${1}"
  read -s -r VALUE
  echo
  test -z "${VALUE}" && usage "You must supply $1"
  export "${2}=${VALUE}"
}

ensureValue() {
  configName="BRANCHOUT_${2}"
  if test -z "${!configName}"; then
    readValue "${1}" "${configName}"
    "${BRANCHOUT_PATH}/branchout" set "${configName}" "${!configName}"
  fi
}

ensureConfigValue() {
  configName="BRANCHOUT_CONFIG_${2}"
  if test -z "${!configName}"; then
    readValue "${1}" "${configName}"
    "${BRANCHOUT_PATH}/branchout" set-config "${2}" "${!configName}"
  fi
}

# Check if the give directory contains the branchout files
function branchoutFiles() {
  if test -f "${1}/Branchoutfile"; then
    BRANCHOUT_FILE=Branchoutfile
    BRANCHOUT_PROJECTS=Branchoutprojects
    return 0
  fi

  if test -f "${1}/.branchout"; then
    BRANCHOUT_FILE=.branchout
    BRANCHOUT_PROJECTS=.projects
    return 0
  fi

  return 1
}

function branchoutDirectory() {
  BRANCHOUT_DIRECTORY="${PWD}"
  while test "${BRANCHOUT_DIRECTORY}" != '/'; do
    if branchoutFiles "${BRANCHOUT_DIRECTORY}"; then
      return 0
    fi
    BRANCHOUT_DIRECTORY=$(dirname "${BRANCHOUT_DIRECTORY}")
  done
  usage "Branchoutfile configuration not found in parent hierarchy, run branchout init"
}

function usage() {
  test -n "${1}" && echo "${1}" && echo
  echo "branchout-environment: load the environment
"
  exit 1
}


test -n "${BRANCHOUT_LOADED}" && return 0

branchoutDirectory

export BRANCHOUT_DIRECTORY
export BRANCHOUT_PROJECTS
export BRANCHOUT_FILE

# shellcheck source=examples/Branchoutfile
source "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_FILE}"

test -z "${BRANCHOUT_NAME}" && usage "Branchout name not defined in ${BRANCHOUT_FILE}, run branchout init"
export BRANCHOUT_NAME
BRANCHOUT_HOME="${HOME}/branchout/${BRANCHOUT_NAME}"
export BRANCHOUT_HOME

test -z "${BRANCHOUT_GIT_BASEURL}" && usage "Git base url is not defined in ${BRANCHOUT_FILE}, run branchout init"
export BRANCHOUT_GIT_BASEURL
export BRANCHOUT_PREFIX

test ! -d "${BRANCHOUT_HOME}" && usage "Branchout home '${BRANCHOUT_HOME}' does not exist, run branchout init"
test -f "${BRANCHOUT_DIRECTORY}/${BRANCHOUT_PROJECTS}" || usage "${BRANCHOUT_PROJECTS} file missing, try branchout add [repository]"

BRANCHOUT_CONFIG_GPG_KEYRING="standard"
BRANCHOUT_CONFIG_GPG_HOME="${BRANCHOUT_HOME}/.gpg"
# shellcheck source=examples/branchoutrc
test -f "${BRANCHOUT_HOME}/branchoutrc" && source "${BRANCHOUT_HOME}/branchoutrc"
export BRANCHOUT_CONFIG_GPG_KEYRING
export BRANCHOUT_CONFIG_GPG_KEY
export BRANCHOUT_CONFIG_GPG_HOME

export BRANCHOUT_MAVEN_REPOSITORY
export BRANCHOUT_DOCKER_REGISTRY

export BRANCHOUT_LOADED="true"
