#!/bin/bash

test -n "${DEBUG}" && set -x
set -e

function fail() {
  test -n "${1}" && echo "${1}" && echo
  exit 2
}

function getConfigValue() {
  test -z "${BRANCHOUT_HOME}" && fail "BRANCHOUT_HOME is not defined"
  if test -f "${BRANCHOUT_HOME}/branchoutrc"; then
    grep "^BRANCHOUT_CONFIG_${1}=" "${BRANCHOUT_HOME}/branchoutrc" | sed -e 's,^.*="\(.*\)"$,\1,'
  fi
}

function setConfigValue() {
  test -z "${BRANCHOUT_HOME}" && fail "BRANCHOUT_HOME is not defined"
  test -z "${2}" && usage "You must supply a value to set"
  test -f "${BRANCHOUT_HOME}/branchoutrc" && grep -v "^BRANCHOUT_CONFIG_${1}=" "${BRANCHOUT_HOME}/branchoutrc" > "${BRANCHOUT_HOME}/branchoutrc.tmp" && true
  echo "BRANCHOUT_CONFIG_${1}=\"${2}\"" >> "${BRANCHOUT_HOME}/branchoutrc.tmp"
  sort "${BRANCHOUT_HOME}/branchoutrc.tmp" > "${BRANCHOUT_HOME}/branchoutrc"
  rm "${BRANCHOUT_HOME}/branchoutrc.tmp"
}

function getValue() {
  test -z "${BRANCHOUT_HOME}" && fail "BRANCHOUT_HOME is not defined"
  grep "^BRANCHOUT_${1}=" "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}" | sed -e 's,^.*="\(.*\)"$,\1,'
}

function setValue() {
  test -z "${PROJECTION_DIRECTORY}" && fail "PROJECTION_DIRECTORY is not defined"
  grep -v "^BRANCHOUT_${1}=" "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}" > "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}".tmp && true
  echo "BRANCHOUT_${1}=\"${2}\"" >> "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}.tmp"
  sort "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}.tmp" > "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}"
  rm "${PROJECTION_DIRECTORY}/${BRANCHOUT_FILE}.tmp"
}

function readValue() {
  if test -z "${3}"; then
    printf "Please provide %s: " "${1}"
  else
    printf "Please provide %s [%s]: " "${1}" "${3}"
  fi
  # if the user does not enter a value sure to add a newline before the error message if there is no default
  read -r VALUE || true
  echo
  test -z "${VALUE}" && VALUE="${3}"
  test -z "${VALUE}" && fail "Error: You must supply a value for $1"
  export "${2}=${VALUE}"
}

function readSecret() {
  printf "Please provide %s: " "${1}"
  read -s -r VALUE
  echo
  test -z "${VALUE}" && fail "Error: You must supply a value for $1"
  export "${2}=${VALUE}"
}

function ensureValue() {
  valueName="BRANCHOUT_${2}"
  if test -z "${!valueName}"; then
    readValue "${1}" "${valueName}" "${3}"
    setValue "${2}" "${!valueName}"
  fi
}

function ensureConfigValue() {
  configName="BRANCHOUT_CONFIG_${2}"
  if test -z "${!configName}"; then
    readValue "${1}" "${configName}" "${3}"
    setConfigValue "${2}" "${!configName}"
  fi
}

export BO_THEME_RESET="\\033[0m"
export BO_THEME_OK="\\033[0m"
export BO_THEME_NOTICE="\\033[35m"
export BO_THEME_ERROR="\\033[31m"
export BO_THEME_WARNING="\\033[38;5;202m"
export BO_THEME_HIGHLIGHT="\\033[38;5;11m"

BRANCHOUT_PROJECTS_DIRECTORY=projects
# shellcheck source=examples/branchoutrc
test -f ~/.config/branchoutrc && source ~/.config/branchoutrc
export BRANCHOUT_PROJECTS_DIRECTORY
