#!/bin/bash

test -n "${DEBUG}" && set -x
set -e

# Check if the give directory contains the branchout files
function branchoutFiles() {
  if test -f "${1}/Branchoutfile"; then
    BRANCHOUT_FILE=Branchoutfile
    BRANCHOUT_PROJECTS=Branchoutprojects
    return 0
  fi

  if test -f "${1}/.branchout"; then
    BRANCHOUT_FILE=.branchout
    BRANCHOUT_PROJECTS=.projects
    return 0
  fi

  return 1
}

function ensureBranchoutFiles() {
  if ! branchoutFiles "${PWD}"; then
    BRANCHOUT_FILE=Branchoutfile
    BRANCHOUT_PROJECTS=Branchoutprojects
    touch Branchoutfile
    test -f Branchoutprojects || touch Branchoutprojects
  fi
 }

function branchoutInitFromUrl() {
  DEFAULT_BRANCHOUT_NAME="$(basename "${1}" | sed -e 's,.git$,,')"
  PROJECT_NAME="${2:-${DEFAULT_BRANCHOUT_NAME}}"
  export PROJECTION_DIRECTORY="${HOME}/${BRANCHOUT_PROJECTS_DIRECTORY}/${PROJECT_NAME}"
  test -d "${PROJECTION_DIRECTORY}" && usage "Branchout projection already exists at ${PROJECTION_DIRECTORY}"
  git clone "${1}" "${PROJECTION_DIRECTORY}" >/dev/null 2>&1 || usage "Failed to branchout projection ${1} into ${PROJECTION_DIRECTORY}" "$(git clone "${1}" "${PROJECTION_DIRECTORY}")"
  echo "Branchout projected '${1}' into ${PROJECTION_DIRECTORY}"
  cd "${PROJECTION_DIRECTORY}" || usage "Failed to enter projection directory ${PROJECTION_DIRECTORY}"

  branchoutInit
}

function branchoutExistingProjection() {
  PROJECT_NAME="$(basename "$(pwd)")"
  export PROJECTION_DIRECTORY="${HOME}/${BRANCHOUT_PROJECTS_DIRECTORY}/${PROJECT_NAME}"
  if ! test -d .git; then
    readValue "projection url" PROJECTION_URL
    DEFAULT_BRANCHOUT_NAME="$(basename "${PROJECTION_URL}" | sed -e 's,.git$,,')"
    git init > /dev/null 2>&1
    git remote add origin "${PROJECTION_URL}"
    echo "Branchout projection created in $(pwd)"
  fi

  branchoutInit
}

function branchoutInitLocal() {
  readValue "projection url" PROJECTION_URL
  DEFAULT_BRANCHOUT_NAME="$(basename "${PROJECTION_URL}" | sed -e 's,.git$,,')"
  readValue "local project name" "PROJECT_NAME" "${DEFAULT_BRANCHOUT_NAME}"

  export PROJECTION_DIRECTORY="${HOME}/${BRANCHOUT_PROJECTS_DIRECTORY}/${PROJECT_NAME}"
  test -d "${PROJECTION_DIRECTORY}" && usage "Branchout projection already exists at ${PROJECTION_DIRECTORY}"
  git init "${PROJECTION_DIRECTORY}" >/dev/null 2>&1
  cd "${PROJECTION_DIRECTORY}" || usage "Cannot enter project directory ${PROJECTION_DIRECTORY}"
  echo "Branchout projection for '${PROJECTION_URL}' created in ${PROJECTION_DIRECTORY}"

  branchoutInit
}

function branchoutInit() {
  ensureBranchoutFiles

  # shellcheck source=examples/Branchoutfile
  source "${BRANCHOUT_FILE}"

  ensureValue "branchout name" "NAME" "${DEFAULT_BRANCHOUT_NAME}"
  test -d "${HOME}/branchout/${BRANCHOUT_NAME}" || mkdir -p "${HOME}/branchout/${BRANCHOUT_NAME}"
  export BRANCHOUT_HOME="${HOME}/branchout/${BRANCHOUT_NAME}"
  echo "Branchout state will be stored in ${HOME}/branchout/${BRANCHOUT_NAME}"
  # shellcheck source=examples/branchoutrc
  test -f "${BRANCHOUT_HOME}/branchoutrc" && source "${BRANCHOUT_HOME}/branchoutrc"

  if git config user.email; then 
    echo "Git author is set to $(git config user.email)"
  else
    ensureConfigValue "your git author email" "GIT_EMAIL"
    git config user.email "${BRANCHOUT_CONFIG_GIT_EMAIL}"
    echo "Set the git author to ${BRANCHOUT_CONFIG_GIT_EMAIL}"
  fi
}

function usage() {
  test $# -gt 0  && echo "${@}" && echo
  echo "branchout-init [git-url] [relocation]

  To branchout from GitHub and use the repository name for the projection

    branchout init https://github.com/branchout/branchout-project

  To branchout from GitHub and use a different name for the projection

    branchout init https://github.com/branchout/branchout-project branchout

  To interactively initialise a projection locally

    branchout init
"

  exit 1
}

function main() {
  BRANCHOUT_PATH="$(dirname "$0")"

  # shellcheck source=branchout-configuration
  . "${BRANCHOUT_PATH}/branchout-configuration"

  if test -n "${1}"; then
    branchoutInitFromUrl "${1}" "${2}"

  elif test "$(dirname "$(pwd)")" = "${HOME}/${BRANCHOUT_PROJECTS_DIRECTORY}"; then
    branchoutExistingProjection
  
  else
    branchoutInitLocal

  fi

  export BRANCHOUT_PROJECTS
  export BRANCHOUT_FILE
}

main "${@}"
